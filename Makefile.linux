# Primary Linux makefile for ka9q-radio package
# Copyright 2017-2025, Phil Karn, KA9Q
# By default, builds release version
# To build for debugging say "make BUILD=debug"
# To force the normally static device handlers to be dynamically loaded (for testing) say "make DYNAMIC=1"
# Make sure you also specify DYNAMIC=1 when doing make install

BUILD ?= release

ifeq ($(BUILD),debug)
     DOPTS = -g
else
     DOPTS = -DNDEBUG=1 -O3
endif

ifeq ($(DYNAMIC),1)
     DOPTS += -DFORCE_DYNAMIC=1
endif


# do NOT set -ffast-math or -ffinite-math-only; NANs are widely used as 'variable not set' sentinels
COPTS=-march=native -std=gnu11 -pthread -Wall -funsafe-math-optimizations -fno-math-errno -fcx-limited-range -D_GNU_SOURCE=1 -Wextra -MMD -MP

CFLAGS=$(DOPTS) $(COPTS) $(INCLUDES)
BINDIR=/usr/local/bin
LIBDIR=/usr/local/share/ka9q-radio
SODIR=/usr/local/lib/ka9q-radio
DAEMONDIR=/usr/local/sbin
VARDIR=/var/lib/ka9q-radio
LDLIBS=-ldl -lavahi-client -lavahi-common -lfftw3f_threads -lfftw3f -liniparser -lairspy -lairspyhf -lrtlsdr -lsamplerate -lopus -logg -lportaudio -lasound -lusb-1.0 -lncurses -lbsd -lm -lpthread

DAEMONS=aprs aprsfeed cwd opusd packetd radiod stereod rdsd

EXECS=control jt-decoded metadump monitor opussend pcmcat pcmrecord pcmsend pcmspawn pl powers setfilt show-pkt show-sig tune wd-record

RADIOD_OBJECTS = main.o audio.o fm.o wfm.o linear.o spectrum.o radio.o radio_status.o rtcp.o rx888.o airspy.o airspyhf.o funcube.o rtlsdr.o sig_gen.o ezusb.o fcd.o hid-libusb.o libradio.a

DYNAMIC_RADIOD_OBJECTS = main.o audio.o fm.o wfm.o linear.o spectrum.o radio.o radio_status.o rtcp.o libradio.a

# Build on raspberry pi only
HEADER_FILE = $(wildcard /usr/include/pigpio.h)

ifeq ($(HEADER_FILE),)
else
	EXECS += set_xcvr
endif


LOGROTATE_FILES = aprsfeed.rotate ft8.rotate ft4.rotate wspr.rotate hfdl.rotate

BLACKLIST=airspy-blacklist.conf

CFILES = airspy.c airspyhf.c aprs.c aprsfeed.c attr.c audio.c avahi.c avahi_browse.c ax25.c bandplan.c config.c control.c cwd.c decimate.c decode_status.c dump.c ezusb.c fcd.c filter.c fm.c funcube.c hid-libusb.c iir.c jt-decoded.c linear.c main.c metadump.c misc.c modes.c monitor.c monitor-data.c monitor-display.c monitor-repeater.c morse.c multicast.c opusd.c opussend.c osc.c packetd.c pcmcat.c pcmrecord.c pcmsend.c pcmspawn.c pl.c powers.c radio.c radio_status.c rdsd.c rtcp.c rtlsdr.c rx888.c setfilt.c show-pkt.c show-sig.c sig_gen.c spectrum.c status.c stereod.c tune.c wd-record.c wfm.c

HFILES = attr.h ax25.h bandplan.h conf.h config.h decimate.h ezusb.h fcd.h fcdhidcmd.h filter.h hidapi.h iir.h misc.h monitor.h morse.h multicast.h osc.h radio.h rx888.h status.h

DYNAMICS = rx888.so airspyhf.so airspy.so sig_gen.so funcube.so rtlsdr.so

# If SDRPLAY is set, add the necessary flags, files, and libraries
ifdef SDRPLAY
CFILES := $(CFILES) sdrplay.c
DYNAMICS += sdrplay.so
endif

# if FOBOS is set, build it too
ifdef FOBOS
CFILES := $(CFILES) fobos.c
DYNAMICS += fobos.so
endif



all: $(DAEMONS) $(EXECS) $(DYNAMICS)

# NB: no longer copies files to /etc/radio. Must be installed manually.
install: $(DAEMONS) $(EXECS)
	/usr/sbin/adduser --quiet --system --group radio
	/usr/sbin/adduser --quiet --system --ingroup radio aprsfeed
	rsync -a aux/98-sockbuf.conf /etc/sysctl.d
	sysctl --quiet -p /etc/sysctl.d/98-sockbuf.conf
	rsync -a $(DAEMONS) $(DAEMONDIR)
	rsync -a $(EXECS) start-ka9q-horus.sh $(BINDIR)
	rsync -a $(DYNAMICS) $(SODIR)
	ln -sf $(SODIR)/*.so /usr/local/lib
	setcap cap_sys_nice=ep $(BINDIR)/monitor
	(cd share;rsync -a --ignore-existing . $(LIBDIR))
	(cd service;rsync -a . /etc/systemd/system)
	(cd rules;rsync -a . /etc/udev/rules.d)
	(cd aux;rsync -a $(BLACKLIST) /etc/modprobe.d)
	(cd aux;rsync -a $(LOGROTATE_FILES) /etc/logrotate.d;chown root:root /etc/logrotate.d/*;chmod go-w /etc/logrotate.d/*)
	touch -a /var/log/ft8.log /var/log/ft4.log /var/log/wspr.log
	mkdir -p /etc/fftw /etc/radio $(VARDIR) $(VARDIR)/ft8 $(VARDIR)/ft4 $(VARDIR)/wspr /var/lib/hfdl /var/log/hfdl
	chown radio:radio /var/log/ft8.log /var/log/ft4.log /var/log/wspr.log /var/log/hfdl /var/log/hfdl
	chgrp radio /etc/radio /etc/fftw $(VARDIR) $(VARDIR)/ft8 $(VARDIR)/ft4 $(VARDIR)/wspr /var/lib/hfdl /var/log/hfdl
	chmod g+ws  /etc/radio /etc/fftw $(VARDIR) $(VARDIR)/ft8 $(VARDIR)/ft4 $(VARDIR)/wspr /var/lib/hfdl /var/log/hfdl
	systemctl daemon-reload

clean:
	-rm -f *.o *.a *.d *.so .depend $(EXECS) $(DAEMONS)

DEPS = $(CFILES:.c=.d)

-include $(DEPS)

.PHONY: clean all install pi

# Executables

aprs: aprs.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ $(LDLIBS)

aprsfeed: aprsfeed.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ $(LDLIBS)

control: control.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ $(LDLIBS)

cwd: cwd.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ $(LDLIBS)

tune: tune.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ $(LDLIBS)

setfilt: setfilt.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ $(LDLIBS)

show-pkt: show-pkt.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ $(LDLIBS)

show-sig: show-sig.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ $(LDLIBS)

metadump: metadump.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ $(LDLIBS)

monitor: monitor.o monitor-data.o monitor-display.o monitor-repeater.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ $(LDLIBS)

opusd: opusd.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ $(LDLIBS)

opussend: opussend.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ $(LDLIBS)

packetd: packetd.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ $(LDLIBS)

pcmcat: pcmcat.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ $(LDLIBS)

pcmspawn: pcmspawn.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ $(LDLIBS)

pcmrecord: pcmrecord.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ $(LDLIBS)

pcmsend: pcmsend.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ $(LDLIBS)

powers: powers.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ $(LDLIBS)

pl: pl.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ $(LDLIBS)

ifeq ($(DYNAMIC),1)
radiod: $(DYNAMIC_RADIOD_OBJECTS)
else
radiod: $(RADIOD_OBJECTS)
endif
	$(CC) -rdynamic $(LDOPTS) -o $@ $^ $(LDLIBS)

rdsd: rdsd.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ $(LDLIBS)

stereod: stereod.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ $(LDLIBS)

jt-decoded: jt-decoded.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ $(LDLIBS)

wd-record: wd-record.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ $(LDLIBS)

# not made unless we're on a rpi
set_xcvr: set_xcvr.o libradio.a
	$(CC) $(LDOPTS) -o $@ $^ -lpigpio $(LDLIBS)

# device shared libraries - build kludgey separate -fPIC versions of
# drivers already built in for testing
# To test, remove these references from main.c
funcube.so: funcube-pic.o fcd-pic.o hid-libusb-pic.o
	$(CC) -shared -o $@ $^

rx888.so: rx888-pic.o ezusb-pic.o hid-libusb-pic.o
	$(CC) -shared -o $@ $^ -lusb-1.0

airspy.so: airspy-pic.o
	$(CC) -shared -o $@ $^ -lairspy

airspyhf.so: airspyhf-pic.o
	$(CC) -shared -o $@ $^ -lairspyhf

rtlsdr.so: rtlsdr-pic.o
	$(CC) -shared -o $@ $^ -lrtlsdr

sig_gen.so: sig_gen-pic.o
	$(CC) -shared -o $@ $^

sdrplay.so: sdrplay-pic.o
	$(CC) -shared -o $@ $^ -lsdrplay_api

fobos.so: fobos-pic.o
	$(CC) -shared -o $@ $^ -lfobos

funcube-pic.o: funcube.c
	$(CC) -c -fPIC $(CFLAGS) -o $@ $^

airspy-pic.o: airspy.c
	$(CC) -c -fPIC $(CFLAGS) -o $@ $^

rtlsdr-pic.o: rtlsdr.c
	$(CC) -c -fPIC $(CFLAGS) -o $@ $^

sig_gen-pic.o: sig_gen.c
	$(CC) -c -fPIC $(CFLAGS) -o $@ $^

rx888-pic.o: rx888.c
	$(CC) -c -fPIC $(CFLAGS) -o $@ $^

airspyhf-pic.o: airspyhf.c
	$(CC) -c -fPIC $(CFLAGS) -o $@ $^

ezusb-pic.o: ezusb.c
	$(CC) -c -fPIC $(CFLAGS) -o $@ $^

hid-libusb-pic.o: hid-libusb.c
	$(CC) -c -fPIC $(CFLAGS) -o $@ $^

fcd-pic.o: fcd.c
	$(CC) -c -fPIC $(CFLAGS) -o $@ $^

sdrplay-pic.o: sdrplay.c
	$(CC) -c -fPIC $(CFLAGS) -o $@ $^

fobos-pic.o: fobos.c
	$(CC) -c -fPIC $(CFLAGS) -o $@ $^


# subroutines useful in more than one program
libradio.a: ax25.o morse.o bandplan.o dump.o modes.o avahi.o avahi_browse.o attr.o filter.o iir.o decode_status.o status.o misc.o multicast.o osc.o config.o
	ar rv $@ $?
	ranlib $@

%.so: %.o
	$(CC) -shared -o $@ $<
